{"version":3,"sources":["services/authService.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["client_id","client_secret","lsTokenKey","lsUserKey","getAuthLink","data","redirect_uri","window","location","origin","response_type","approval_prompt","scope","searchParams","URLSearchParams","Object","entries","forEach","key","val","append","toString","getAuthTokenAsync","a","lsTokenDataStr","localStorage","getItem","length","tData","JSON","parse","expires_at","Date","now","access_token","refresh_token","fetch","body","grant_type","headers","method","then","res","json","result","setItem","stringify","Error","setAuthTokenByCodeAsync","code","console","log","athlete","tokenData","App","useState","token","setToken","loading","setLoading","err","setErr","useEffect","search","get","history","pushState","reload","message","href","getUserData","getStoredData","className","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.101b6f08.chunk.js","sourcesContent":["const client_id = '73436';\r\nconst client_secret = 'ba9fb913d81fc6941fe0d6e96011de332fff2697';\r\nconst lsTokenKey = 'snpnz_token';\r\nconst lsUserKey = 'snpnz_user';\r\n\r\nexport function getAuthLink() {\r\n    const data = {\r\n        client_id,\r\n        redirect_uri: window.location.origin,\r\n        response_type: 'code',\r\n        approval_prompt : 'auto',\r\n        scope: 'activity:read',\r\n    };\r\n\r\n    const searchParams = new URLSearchParams();\r\n    Object.entries(data).forEach(([key, val]) => searchParams.append(key, val))\r\n\r\n    return `https://www.strava.com/oauth/authorize?${searchParams.toString()}`;\r\n}\r\n\r\nexport async function getAuthTokenAsync() {\r\n    const lsTokenDataStr = localStorage.getItem(lsTokenKey);\r\n\r\n    if (lsTokenDataStr && lsTokenDataStr.length) {\r\n        const tData = JSON.parse(lsTokenDataStr);\r\n        if (tData.expires_at && tData.expires_at * 1000 > Date.now()) {\r\n            return tData.access_token;\r\n        }\r\n\r\n        if (tData.refresh_token) {\r\n\r\n                const result = await fetch(\"https://www.strava.com/api/v3/oauth/token\", {\r\n                    body: new URLSearchParams({\r\n                        client_id,\r\n                        client_secret,\r\n                        refresh_token: tData.refresh_token,\r\n                        grant_type: 'refresh_token'\r\n                    }).toString(),\r\n                    headers: {\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                    },\r\n                    method: \"POST\"\r\n                }).then(res => res.json());\r\n                localStorage.setItem(lsTokenKey, JSON.stringify(result));\r\n\r\n                return result.access_token;\r\n        }\r\n\r\n        throw new Error('no token');\r\n    } else {\r\n        throw new Error('no stored token data');\r\n    }\r\n}\r\n\r\nexport async function setAuthTokenByCodeAsync(code:string) {\r\n        const result = await fetch(\"https://www.strava.com/api/v3/oauth/token\", {\r\n            body: new URLSearchParams({\r\n                client_id,\r\n                client_secret,\r\n                code,\r\n                grant_type: 'authorization_code'\r\n            }).toString(),\r\n            headers: {\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n            },\r\n            method: \"POST\"\r\n        }).then(res => res.json());\r\n\r\n        console.log({result})\r\n        const { athlete, ...tokenData } = result;\r\n\r\n        localStorage.setItem(lsUserKey, JSON.stringify(athlete));\r\n        localStorage.setItem(lsTokenKey, JSON.stringify(tokenData));\r\n\r\n        return result.access_token;\r\n}\r\n\r\nexport async function unAuthorizeAsync(){\r\n    const access_token = '';\r\n        await fetch(\r\n            `https://www.strava.com/oauth/deauthorize?${new URLSearchParams({ access_token }).toString()}`,\r\n            { method: \"POST\" }\r\n        ).then(res => res.json());\r\n        localStorage.clear();\r\n\r\n        return Promise.resolve({ success: true });\r\n}\r\n\r\nexport function getUser() {\r\n    return JSON.parse(localStorage.getItem(lsUserKey) as string);\r\n}","import { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  getAuthLink,\n  getAuthTokenAsync,\n  setAuthTokenByCodeAsync,\n  getUser\n} from './services/authService';\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [dbLoading, setDbLoading] = useState(true);\n  const [err, setErr] = useState('');\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n\n    if(code?.length) {\n      const getUserData = async () => {\n        setLoading(true);\n        try {\n          await setAuthTokenByCodeAsync(code);\n          window.history.pushState({},'', '/');\n          window.location.reload();\n          //window.location.href = window.location.href.replace(window.location.search, '');\n        } catch (e) {\n          setErr((e as Error).message)\n          window.location.href = getAuthLink();\n        }\n        finally {\n          setLoading(false);\n        }\n      }\n      getUserData();\n    } else {\n      const getStoredData = async () => {\n        setLoading(true);\n        try {\n          const token = await getAuthTokenAsync();\n          setToken(token);\n        } catch (e) {\n          console.log(e)\n          //window.location.href = getAuthLink();\n        } finally {\n          setLoading(false);\n        }\n      }\n\n      getStoredData();\n    }\n\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n\n\n  return (\n      <div className=\"App\">\n        {err && <p>{err}</p>}\n        {token && <pre>{JSON.stringify(getUser(),null, '\\t')}</pre>}\n        {!token && <button  className=\"bigButton\" onClick={() => window.location.href = getAuthLink()}>Войти в Strava</button>}\n      </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}